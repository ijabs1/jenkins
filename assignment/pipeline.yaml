trigger: none
  #branches:
    #exclude: ["*"]

#pr:
  #branches:
  #  include: ["main"]

pool:
  name: 'Aztraining-Cat-Uk-Agentpool'


variables:
  - group: terraform-variables
  #terraformVersion: '1.10.2'

stages:
  - stage: Build
    displayName: "Build Terraform Code"
    jobs:
      - job: ValidateAndInit
        displayName: "Validate, Format, and Initialize Terraform"
        pool:
          name: 'Aztraining-Cat-Uk-Agentpool'
        steps:
          - script: |
              # Ensure Terraform is available
              terraform --version
            displayName: "Check Terraform Version"

          - task: AzureCLI@2
            inputs:
              azureSubscription: $(SERVICE_CONNECTION_NAME) # Replace with your service connection name
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                # Login to Azure using the service connection (automatically handled by AzureCLI task)
                az account show

                # Initialize Terraform with backend configuration
                terraform init 
            displayName: "Terraform Init"

          - script: |
              terraform fmt -check
              terraform validate
            displayName: "Validate and Format Terraform Code"

  - stage: Release
    displayName: "Release Terraform Code"
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: "Deploy Terraform Infrastructure"
        environment: 'Production'
        pool:
          name: 'Aztraining-Cat-Uk-Agentpool'
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    terraform -chdir=$(System.DefaultWorkingDirectory)/assignment plan -out=tfplan
                  displayName: "Terraform Plan"

                - script: |
                    #terraform apply -auto-approve tfplan
                  displayName: "Terraform Apply"
