trigger: none

#pr:
 # branches:
 #   include: 
 #     - main

pool:
  name: 'Aztraining-Cat-Uk-Agentpool'

variables:
  - group: terraform-variables

stages:
  - stage: Build
    displayName: "Build Terraform Code"
    jobs:
      - job: ValidateAndInit
        displayName: "Validate and Format Terraform"
        pool:
          name: 'Aztraining-Cat-Uk-Agentpool'
        steps:
          - script: |
              # Ensure Terraform is available
              terraform --version
            displayName: "Check Terraform Version"
          
          - task: AzureCLI@2
            inputs:
              azureSubscription: $(SERVICE_CONNECTION_NAME)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az account show
                terraform init 
            displayName: "Terraform Init"
          
          - script: |
              terraform fmt -check
              terraform validate
            displayName: "Validate and Format Terraform Code"

  - stage: Plan
    displayName: "Plan Terraform Changes"
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: TerraformPlan
        displayName: "Create Terraform Plan"
        pool:
          name: 'Aztraining-Cat-Uk-Agentpool'
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: $(SERVICE_CONNECTION_NAME)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                terraform -chdir=$(System.DefaultWorkingDirectory)/assignment init
                terraform -chdir=$(System.DefaultWorkingDirectory)/assignment plan -out=tfplan
            displayName: "Generate Terraform Plan"
          
          # Archive the plan file as an artifact
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)/assignment/tfplan'
              artifact: 'terraform-plan'
              publishLocation: 'pipeline'

  - stage: Apply
    displayName: "Apply Terraform Changes"
    dependsOn: Plan
    condition: succeeded() #and(succeeded()#, eq(variables['Build.Reason'], 'PullRequest'), eq(variables['System.PullRequest.TargetBranch'], 'refs/heads/main'))
    jobs:
      - deployment: Deploy
        displayName: "Deploy Terraform Infrastructure"
        environment: 'Production'
        pool:
          name: 'Aztraining-Cat-Uk-Agentpool'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    buildType: 'current'
                    artifactName: 'terraform-plan'
                    targetPath: '$(System.DefaultWorkingDirectory)/assignment'
                
                - task: AzureCLI@2
                  inputs:
                    azureSubscription: $(SERVICE_CONNECTION_NAME)
                    scriptType: bash
                    scriptLocation: inlineScript
                    inlineScript: |
                      terraform init
                      terraform -chdir=$(System.DefaultWorkingDirectory)/assignment apply -auto-approve tfplan
                  displayName: "Apply Terraform Changes"